name: Deploy to Olympus Server

on: 
  push:
    branches:
      -  master
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.16' # Adjust this if you're using a different version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run unit tests
      - name: Run unit tests
        run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-20.04
    environment: Production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.DROPLET_SSH_KEY }}

    - name: Copy files to DigitalOcean Droplet
      run: |
        rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" --exclude 'logs/*' ./ kratos@${{ secrets.DROPLET_IP }}:~/gg-marketing-tool-backend

    - name: Run npm build on DigitalOcean Droplet
      run: |
        ssh -o StrictHostKeyChecking=no kratos@${{ secrets.DROPLET_IP }} << 'EOF'
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          nvm use 14.16.0
          cd ~/gg-marketing-tool-backend
          npm install
          npm run build
        EOF

    - name: SSH into DigitalOcean Droplet and deploy docker
      run: |
        ssh -o StrictHostKeyChecking=no -o ConnectTimeout=500 kratos@${{ secrets.DROPLET_IP }} << 'EOF'
          cd ~/gg-marketing-tool-backend
          docker compose down
          docker compose up --build -d
        EOF
